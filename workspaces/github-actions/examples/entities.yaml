apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: backstage
  description: backstage.io
  annotations:
    github.com/project-slug: 'backstage/backstage'
    backstage.io/managed-by-location: url:https://github.com/backstage/backstage
    backstage.io/managed-by-origin-location: url:https://github.com/backstage/backstage
    backstage.io/techdocs-ref: url:https://github.com/backstage/backstage
spec:
  type: website
  lifecycle: production
  owner: guests
  system: examples
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
  annotations:
    'jenkins.io/job-full-name': folder/job
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
  annotations:
    github.com/project-slug: 'backstage/backstage'
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";
    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }
    message ExampleMessage {
      string example = 1;
    };
