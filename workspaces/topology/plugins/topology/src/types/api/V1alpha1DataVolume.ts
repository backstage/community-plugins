/*
 * Copyright 2024 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1alpha1DataVolumeSpec } from './V1alpha1DataVolumeSpec';
import { V1alpha1DataVolumeStatus } from './V1alpha1DataVolumeStatus';
import { V1ObjectMeta } from './V1ObjectMeta';

/**
 * DataVolume provides a representation of our data volume +genclient +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
 * @export
 * @interface V1alpha1DataVolume
 */
export interface V1alpha1DataVolume {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   * @type {string}
   * @memberof V1alpha1DataVolume
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   * @type {string}
   * @memberof V1alpha1DataVolume
   */
  kind?: string;
  /**
   *
   * @type {V1ObjectMeta}
   * @memberof V1alpha1DataVolume
   */
  metadata?: V1ObjectMeta;
  /**
   *
   * @type {V1alpha1DataVolumeSpec}
   * @memberof V1alpha1DataVolume
   */
  spec: V1alpha1DataVolumeSpec;
  /**
   *
   * @type {V1alpha1DataVolumeStatus}
   * @memberof V1alpha1DataVolume
   */
  status?: V1alpha1DataVolumeStatus;
}
