/*
 * Copyright 2024 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1alpha1DataVolumeSource } from './V1alpha1DataVolumeSource';
import { V1beta1DataVolumeSourceRef } from './v1beta1DataVolumeSourceRef';
import { V1beta1StorageSpec } from './V1beta1StorageSpec';
import { V1PersistentVolumeClaimSpec } from './V1PersistentVolumeClaimSpec';

/**
 * DataVolumeSpec defines our specification for a DataVolume type
 * @export
 * @interface V1alpha1DataVolumeSpec
 */
export interface V1alpha1DataVolumeSpec {
  preallocation?: boolean;
  /**
   * DataVolumeContentType options: \"kubevirt\", \"archive\"
   * @type {string}
   * @memberof V1alpha1DataVolumeSpec
   */
  contentType?: string;
  /**
   *
   * @type {V1PersistentVolumeClaimSpec}
   * @memberof V1alpha1DataVolumeSpec
   */
  pvc?: V1PersistentVolumeClaimSpec;
  /**
   *
   * @type {V1alpha1DataVolumeSource}
   * @memberof V1alpha1DataVolumeSpec
   */
  source: V1alpha1DataVolumeSource;
  /**
   *
   * @type {V1beta1StorageSpec}
   * @memberof V1alpha1DataVolumeSpec
   */
  storage?: V1beta1StorageSpec;
  /**
   *
   * @type {V1beta1DataVolumeSourceRef}
   * @memberof V1alpha1DataVolumeSpec
   */
  sourceRef?: V1beta1DataVolumeSourceRef;
}
