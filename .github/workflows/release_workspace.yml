name: Release workspace

on:
  workflow_dispatch:
    inputs:
      workspace:
        description: "Name of the Workspace"
        required: true
        type: string
  workflow_call:
    inputs:
      workspace:
        description: "Name of the Workspace"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.workspace }}

jobs:
  changesets-pr:
    name: Update Version Packages PR for ${{ inputs.workspace }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./workspaces/${{ inputs.workspace }}
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096
    outputs:
      publishing-needed: ${{ steps.should-publish.outputs.out }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('workspaces/${0}/**/yarn.lock', inputs.workspace)) }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --immutable

      - name: Detect changesets and eventually update Version Packages (${{ inputs.workspace }}) PR
        id: changesets-pr
        uses: changesets/action@v1
        with:
          title: Version Packages (${{ inputs.workspace }})
          cwd: workspaces/${{ inputs.workspace }}
          version: yarn changeset version
        env:
          # TODO(vinzscam): If we use secrets.GITHUB_TOKEN here, checks won't trigger in the version packages
          # PR. cf. https://github.community/t/push-doesnt-trigger-workflow-action-in-an-open-pr/118675
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Early check whether publishing is needed
        id: should-publish
        if: steps.changesets-pr.outputs.hasChangesets == 'false'
        run: echo "out=$(node ../../scripts/ci/publishing-needed.js ${{ inputs.workspace }})" >> $GITHUB_OUTPUT

  release:
    name: Release workspace ${{ inputs.workspace }}
    runs-on: ubuntu-latest
    needs: changesets-pr
    if: needs.changesets-pr.outputs.publishing-needed
    defaults:
      run:
        working-directory: ./workspaces/${{ inputs.workspace }}
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('workspaces/${0}/**/yarn.lock', inputs.workspace)) }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --immutable

      - name: Compile TypeScript
        run: yarn tsc:full

      - name: Build all packages
        run: yarn build:all

      - name: Publish packages
        id: changesets-publish
        uses: changesets/action@v1
        with:
          publish: yarn workspaces foreach npm publish --access public
          title: Version Packages (${{ inputs.workspace }})
          cwd: workspaces/${{ inputs.workspace }}
          version: yarn changeset version
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
